{"version":3,"sources":["Metrics.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["require","Object","keys","dataC","divDOWN","document","createElement","id","body","appendChild","countriesName","countriesLanguage","compare","a","b","value","keysC","searchWishesForALanguage","languageW","res","i","dataW","length","Language","toLowerCase","Wishe","App","push","name","sort","countries","_useState","useState","_useState2","slicedToArray","setSelectedOption","react_default","className","onChange","event","target","allL","languages","j","w","dataL","language","selected","disabled","map","option","onClick","message","mail","href","click","sendMail","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App_0","getElementById"],"mappings":"i5tDAIWA,EAAQ,GAEGC,OAAOC,KAAKC,KCEvBH,EAAQ,GAAnB,IACMI,EAAUC,SAASC,cAAc,OACvCF,EAAQG,GAAG,UACXF,SAASG,KAAKC,YAAYL,GAE1B,IAAIM,EAAmC,GAEnCC,EAA0C,GAG9C,SAASC,EAASC,EAAoBC,GACpC,OAAKD,EAAEE,MAAQD,EAAEC,OACP,EAEAF,EAAEE,MAAQD,EAAEC,MACb,EAEI,EAGf,IAAIC,EAAkBf,OAAOC,KAAKC,KAUlC,SAASc,EAA0BC,GAEjC,IADA,IAAIC,EAAc,GACTC,EAAI,EAAIA,EAAIC,IAAWC,OAASF,IAClCC,IAAWD,GAAGG,SAAUC,eAAiBN,EAAUM,gBACtDL,EAAME,IAAWD,GAAGK,OAGxB,OAAON,EAkEF,IACQO,EA9DsB,WACnChB,EAAgB,GArBlB,WACE,IAAK,IAAIU,EAAI,EAAIA,EAAIJ,EAAMM,OAASF,IAElCV,EAAciB,KAAK,CAACZ,MAAQZ,IAAgBa,EAAMI,IAAIQ,OAEjDlB,EAAcmB,KAAKjB,GAiB1BkB,GAFyC,IAAAC,EAIGC,qBAJHC,EAAAhC,OAAAiC,EAAA,EAAAjC,CAAA8B,EAAA,GAIlBI,GAJkBF,EAAA,GAAAA,EAAA,IA0BzC,OACEG,EAAAvB,EAAAP,cAAA,OAAK+B,UAAU,OACbD,EAAAvB,EAAAP,cAAA,UAAQ+B,UAAU,aAAaC,SAvBd,SAACC,GACpB,IAAMxB,EAAQwB,EAAMC,OAAOzB,MAC3BJ,EAAkB,GACD,GACjB,IAAK,IAAIS,EAAI,EAAIA,EAAIJ,EAAMM,OAASF,IAElC,GAAIL,GAAUZ,IAAgBa,EAAMI,IAAIQ,KAItC,IAFA,IAAIa,EAAOtC,IAAgBa,EAAMI,IAAIsB,UAE5BC,EAAI,EAAIA,EAAIF,EAAKnB,OAASqB,IAAI,CAErC,IAAIC,EAAIC,IAAgBJ,EAAKE,IAAIf,KACS,GAAtCX,EAAyB2B,GAAGtB,QAC9BX,EAAkBgB,KAAM,CAACmB,SAAaF,IAK9CT,EAAkBpB,KAKdqB,EAAAvB,EAAAP,cAAA,UAAQyC,UAAQ,EAACC,UAAQ,GAAzB,+CAGCtC,EAAcuC,IAAI,SAACC,GAAD,OACfd,EAAAvB,EAAAP,cAAA,UAAQS,MAAOmC,EAAOnC,OAAQmC,EAAOnC,UAI3CqB,EAAAvB,EAAAP,cAAA,WACE8B,EAAAvB,EAAAP,cAAA,aACE8B,EAAAvB,EAAAP,cAAA,aAEDK,EAAkBsC,IAAI,SAACC,GAAD,OAErBd,EAAAvB,EAAAP,cAAA,MAAI6C,QAAS,kBAYvB,SAAkBC,GAChB,IAAIC,EAAOhD,SAASC,cAAc,KAClC+C,EAAKC,KAAO,6BAA6BF,EAAQ,sBACjDC,EAAKE,QAfsBC,CAASvC,EAAyBiC,EAAOJ,aACxDV,EAAAvB,EAAAP,cAAA,UAAK4C,EAAOJ,UACZV,EAAAvB,EAAAP,cAAA,UAAMW,EAAyBiC,EAAOJ,mBCjFrCW,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCFdY,IAASC,OACPnC,EAAAvB,EAAAP,cAAC8B,EAAAvB,EAAM2D,WAAP,KACEpC,EAAAvB,EAAAP,cAACmE,EAAD,OAGFpE,SAASqE,eAAe,SAE1BjB","file":"static/js/main.2b3d25db.chunk.js","sourcesContent":["import * as dataL from '../src/assets/languages.json';\nimport * as dataC from '../src/assets/countries.json';\nimport * as dataW from '../src/assets/Wishes.json';\n\nconst fs = require(\"fs\");\n\nvar keysC : string[]= Object.keys(dataC.countries)\nvar languagesC : string[] = []\nvar languagesW : string[] = []\nexport var missingLanguages : {\"language\":string}[] = []\n\nexport function metrics() : void{\n  for (let i = 0 ; i < keysC.length ; i++){\n      //@ts-ignore\n      var allL = dataC.countries[keysC[i]].languages;\n      for (let j = 0 ; j < allL.length ; j++){\n        //@ts-ignore\n        languagesC.push((dataL.languages[allL[j]].name ).toLowerCase())\n      }\n    }\n  for (let i = 0 ; i <dataW.list.length ; i++){\n    languagesW.push((dataW.list[i].Language).toLowerCase());\n  }\n\n  \n  for (let i = 0 ; i < languagesC.length ; i++){\n    if (!languagesW.includes(languagesC[i])){\n        missingLanguages.push({\"language\":languagesC[i]});\n    }\n  }\n  console.log(missingLanguages.sort());  \n}\n","import React , { useState } from 'react';\nimport './App.css';\nimport './Metrics'\n\nimport * as dataL from '../src/assets/languages.json';\nimport * as dataC from '../src/assets/countries.json';\nimport * as dataW from '../src/assets/Wishes.json';\nimport { metrics, missingLanguages } from './Metrics';\nconst fs = require('fs');\nconst divDOWN = document.createElement(\"div\");\ndivDOWN.id=\"message\";\ndocument.body.appendChild(divDOWN)\n\nlet countriesName : {value:string}[] = []\n\nlet countriesLanguage: { language:string}[] = []\nlet countriesWishe : { language: string,wishe: string}[] = []\n\nfunction compare( a : {value:string}, b : {value:string} ) {\n  if ( a.value < b.value ){\n    return -1;\n  }\n  else if ( a.value > b.value ){\n    return 1;\n  }\n  else {return 0};\n}\n\nvar keysC : string[]= Object.keys(dataC.countries)\n\nfunction countries():  {value:string}[] {\n  for (let i = 0 ; i < keysC.length ; i++){\n    //@ts-ignore\n    countriesName.push({\"value\":dataC.countries[keysC[i]].name});\n  } \n  return countriesName.sort(compare);\n}\n\nfunction searchWishesForALanguage (languageW : string) :string {\n  let res: string = \"\"\n  for (let i = 0 ; i < dataW.list.length ; i++){\n    if ((dataW.list[i].Language).toLowerCase() == languageW.toLowerCase()){\n      res = dataW.list[i].Wishe\n    }\n  }\n  return res\n}\n\n//metrics()\n\nconst App: React.FunctionComponent = () => {\n  countriesName = [];\n  countries()\n \n  const [selectedOption, setSelectedOption] = useState<String>();\n  const selectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const value = event.target.value;\n    countriesLanguage=[]\n    countriesWishe = []\n    for (let i = 0 ; i < keysC.length ; i++){\n      //@ts-ignore\n      if (value ==  dataC.countries[keysC[i]].name){\n        //@ts-ignore\n        var allL = dataC.countries[keysC[i]].languages;\n        //@ts-ignore\n        for (let j = 0 ; j < allL.length ; j++){\n          //@ts-ignore\n          let w = dataL.languages[allL[j]].name ;\n          if (searchWishesForALanguage(w).length != 0 ) {\n            countriesLanguage.push( {\"language\" : w} )\n          }\n       }\n    }\n  }\n    setSelectedOption(value);\n  };\n  return (\n    <div className='App' >\n      <select className='App-select' onChange={selectChange} >\n        <option selected disabled>\n          Choose one (and Click to send your message)\n        </option>\n        {countriesName.map((option) => (\n            <option value={option.value}>{option.value}</option>\n  \n        ))}          \n      </select>    \n      <div>\n        <table>\n          <tbody>\n      \n        {countriesLanguage.map((option) => (\n        \n          <tr onClick={() => sendMail(searchWishesForALanguage(option.language))}>\n              <td>{option.language}</td>\n              <td >{searchWishesForALanguage(option.language) }</td>\n            </tr>\n        ))}\n        </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nfunction sendMail(message : string){\n  let mail = document.createElement(\"a\");\n  mail.href = \"mailto:?subject=2022&body=\"+message+\" 2022 !\"+\"ðŸ¥³\";\n  mail.click();\n}\n\nexport const messageChoisi:string = \"message-A-Afficher\"\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\nreportWebVitals();\n\n"],"sourceRoot":""}