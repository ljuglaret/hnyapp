{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["divDOWN","require","document","createElement","id","body","appendChild","myObj","JSON","stringify","dataC","replace","chr","charCodeAt","toString","substring","countriesList","countrieAndName","countrieAndLanguage","countrieAndWishes","myObjL","dataL","myObjW","dataW","slice","length","obj","parse","App","searchWishesForALanguage","language","res","i","toLocaleLowerCase","includes","Language","Wishe","_useState","useState","_useState2","Object","slicedToArray","selectedOption","setSelectedOption","split","str","replaceAll","push","value","countries","react_default","a","className","defaultValue","onChange","event","target","allLanguages","k","s","l","wishe","selected","disabled","map","option","onClick","message","mail","href","click","sendMail","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.75ebf225.chunk.js","sourcesContent":["import React , { useState } from 'react';\nimport './App.css';\n\nimport * as dataL from '../src/assets/languages.json';\nimport * as dataC from '../src/assets/countries.json';\nimport * as dataW from '../src/assets/Wishes.json';\nconst fs = require('fs');\nconst divDOWN = document.createElement(\"div\");\ndivDOWN.id=\"message\";\ndocument.body.appendChild(divDOWN)\nlet myObj = JSON.stringify(dataC);\nmyObj  = myObj.replace(/[\\u007F-\\uFFFF]/g, function(chr) {\n  return \"\\\\u\" + (\"0000\" + chr.charCodeAt(0).toString(16)).substring(-4)\n})\nlet countriesList : string[] = []\n\nlet countrieAndName: { value: string }[] = []\nlet countrieAndLanguage: { language: LanguageT }[] = []\nlet countrieAndWishes: { language: LanguageT,wishe: LanguageT}[] = []\n\nlet myObjL = JSON.stringify(dataL);\nmyObjL  = myObjL.replace(/[\\u007F-\\uFFFF]/g, function(chr) {\n  return \"\\\\u\" + (\"0000\" + chr.charCodeAt(0).toString(16)).substring(-4)\n})\nlet myObjW = JSON.stringify(dataW);\nmyObjW  = myObjW.replace(/[\\u007F-\\uFFFF]/g, function(chr) {\n  return \"\\\\u\" + (\"0000\" + chr.charCodeAt(0).toString(16)).substring(-4)\n})\ntype LanguageT = string\n\ninterface MyObj {\n  Language: LanguageT\n  Wishe: string\n}\nmyObjW = myObjW.slice(11,myObjW.length - 1)\nlet obj :MyObj[]  = JSON.parse(myObjW)\n\n\nconst App: React.FunctionComponent = () => {\n \n  function searchWishesForALanguage (language : LanguageT) :string {\n    let res: string = \"\"\n    for (let i = 0 ; i < obj.length ; i++){\n      if(language.toLocaleLowerCase().includes(obj[i].Language.toLocaleLowerCase())){\n        res = obj[i].Wishe;\n      }\n    }\n    return res\n  }\n  function countries(): string[] {\n    for(let i = 0 ; i < myObj.split(\"},\").length ; i++){\n      let str : string = (myObj.split(\"},\")[i].split(\",\")[0]).split(\":\")[2]\n      str = str.replaceAll('\\\"' , '')\n      if (!str.includes(\"name\")){        \n        countriesList.push(str);\n        countrieAndName.push(  { \"value\": str });\n      }\n  }\n  return countriesList\n}\n\n  const [selectedOption, setSelectedOption] = useState<String>();\n  const selectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const value = event.target.value;\n    countrieAndLanguage=[]\n    countrieAndWishes = []\n\n  for(let i = 0 ; i < myObj.split(\"},\").length ; i++){\n    let str : String = myObj.split(\"},\")[i]\n    if(str.includes('\"name\":\"' +value+'\"')){\n      let allLanguages  = str.split(\":\")[8].split(\",\")\n      for (let k = 0 ; k < allLanguages.length ; k++){\n        let s : string = allLanguages[k];\n        s  = s.substring(1,s.length-1);\n        s = s.replaceAll('\\\"','');\n        s = \"\\\"\"+s+\"\\\"\";\n        \n\n        for(let i = 0 ; i < myObjL.split(\"},\").length ; i++){\n          let str : String = myObjL.split(\"},\")[i]\n          if(str.includes(s)){\n            var l = str.split(\":\")[2].split(\",\")[0]\n            countrieAndLanguage.push(  { \"language\":l });\n            countrieAndWishes.push({\"language\": l,wishe:searchWishesForALanguage(l)})\n          }\n        }\n      }\n\n    }\n  } \n    setSelectedOption(value);\n  };\n  countries();\n  return (\n    <div className='App' >\n      <select defaultValue={'DEFAULT'} className='App-select' onChange={selectChange} >\n        <option selected disabled>\n          Choose one\n        </option>\n        {countrieAndName.map((option) => (\n            <option value={option.value}>{option.value}</option>\n  \n        ))}          \n      </select>    \n      <p >{selectedOption} </p>\n      <div>\n        <table>\n          <thead></thead>\n          <tbody>\n        {countrieAndLanguage.map((option) => (\n            <tr>\n              <td>{option.language}</td>\n              <td onClick={() => sendMail(searchWishesForALanguage(option.language))}>{searchWishesForALanguage(option.language) }</td>\n            </tr>\n        ))}\n        </tbody>\n        </table>\n      \n      </div>\n    </div>\n  );\n};\n//onClick={() => this.fetchData(\"dfd\")}\n//sendMail('e')\n\nfunction sendMail(message : string){\n  let mail = document.createElement(\"a\");\n  mail.href = \"mailto:?subject=2022&body=\"+message+\" 2022 !\"+\"ðŸ¥³\";\n  mail.click();\n  //alert(\"mail : \" + message)\n}\n\nexport const messageChoisi:string = \"message-A-Afficher\"\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App,{messageChoisi} from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n\n  </React.StrictMode>\n  ,\n  \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}